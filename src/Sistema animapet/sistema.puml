@startuml Containers
!include https://raw.githubusercontent.com/adrianvlupu/C4-PlantUML/latest/C4_Container.puml

LAYOUT_WITH_LEGEND()

Person(pessoa, "Usuário do sistema", "Pessoa que tem o acesso ao sistema animapet.")

System_Ext(es, "Sistema de E-mail", "Sistema interno de e-mail do Gmail.")
System_Ext(spo, "Sistema de Denuncia", "Fornece API para denúncias.")
System_Ext(pix, "Sistema de Pagamentos", "Fornece API para realização de recebimentos e realização de doações.")

System_Boundary(ibs, "Sistema Animapet") {

    Container(wa, "Aplicação Web", "java e Spring Boot", "Entrega o conteúdo estático e o aplicativo de página única.")
    Container(spa, "Single Page Application", "React", "Fornece toda a funcionalidade do sistema Animapet aos usuarios por meio do navegador da web.")
    Container(ma, "Aplicativo Mobile", "Dart/Flutter", "Fornece um subconjunto limitado da funcionalidade do sistema Animapet para usuarios por meio de seu dispositivo móvel.")
    Container(db, "Banco de Dados", "Banco de Dados MySQL", "Armazena informações de registro do usuário, credenciais de autenticação com hash, logs de acesso, etc.")
    Container(api, "API Application", "java e Spring MVC", "Fornece as funcionalidades do sistema Animapet via uma API JSON/HTTP.")

    Rel(api, es, "Envia e-mails", "SMTP")
    Rel(api, spo, "Uses", "JSON/HTTPS")
    Rel(api, pix, "Uses", "JSON/HTTPS")
    Rel(api, db, "Lê e Escreve em", "JDBC")
    Rel(wa, spa, "Entrega")
    Rel(spa, api, "Usa", "JSON/HTTPS")
    Rel(ma, api, "Usa", "JSON/HTTPS")
}

Rel(pessoa, wa, "Usa", "HTTPS")
Rel(pessoa, spa, "Usa")
Rel(pessoa, ma, "Usa")
Rel(es, pessoa, "Envia e-mails para")
@enduml